#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        capsword: capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSWORD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        toggle_numpad: toggle_numpad {
            compatible = "zmk,behavior-tap-dance";
            label = "TOGGLE_NUMPAD";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&tog 2>;
        };

        disable_numpad: disable_numpad {
            compatible = "zmk,behavior-toggle-layer";
            label = "DISABLE_NUMPAD";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        tapdance_capslock: tapdance_capslock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_CAPSLOCK";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    macros {
        doubleclick: doubleclick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1>, <&macro_wait_time 100>, <&mkp MB1>;

            label = "DOUBLECLICK";
        };

        triple_click: triple_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB1>,
                <&macro_wait_time 100>,
                <&mkp MB1>,
                <&macro_wait_time 100>,
                <&mkp MB1>;

            label = "TRIPLE_CLICK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 F1        &kp F2     &kp F3          &kp F4     &kp F5                      &kp F6                                   &kp F7  &kp F8                &kp F9             &kp F10   &kp F11                      &kp F12
&kp EQUAL       &kp N1     &kp N2          &kp N3     &kp N4                      &kp N5                                   &kp N6  &kp N7                &kp N8             &kp N9    &kp N0                       &kp MINUS
&kp TAB         &kp Q      &kp W           &kp E      &kp R                       &kp T                                    &kp Y   &kp U                 &kp I              &kp O     &kp P                        &kp BSLH
&lt 2 ESC       &lt 2 A    &kp S           &kp D      &kp F                       &kp G                                    &kp H   &kp J                 &kp K              &kp L     &mt RIGHT_COMMAND SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X           &kp C      &kp V                       &kp B                                    &kp N   &kp M                 &kp COMMA          &kp DOT   &kp FSLH                     &mo 4
&kp LEFT        &kp RIGHT  &toggle_numpad  &kp GRAVE  &tapdance_capslock                                                           &capsword             &kp LBKT           &kp RBKT  &kp UP_ARROW                 &kp DOWN
                                                      &mt LEFT_CONTROL BACKSPACE  &mt LEFT_COMMAND DELETE  &mo 1           &mo 1   &mt RIGHT_ALT RETURN  &kp SPACE
                                                      &kp BACKSPACE               &kp DELETE               &kp LEFT_ALT    &tog 6  &kp RIGHT_COMMAND     &kp RIGHT_CONTROL
            >;
        };

        symbols {
            bindings = <
&trans  &trans           &trans            &trans             &trans     &trans            &trans  &trans     &trans                &trans                 &trans   &trans
&trans  &trans           &trans            &trans             &trans     &trans            &trans  &trans     &trans                &trans                 &trans   &trans
&trans  &trans           &trans            &trans             &trans     &trans            &trans  &trans     &trans                &trans                 &trans   &trans
&trans  &kp EXCLAMATION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL  &trans            &trans  &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT  &trans
&trans  &trans           &trans            &trans             &trans     &trans            &trans  &trans     &trans                &trans                 &trans   &trans
&trans  &trans           &trans            &trans             &trans                               &trans     &trans                &trans                 &trans   &trans
                                                              &trans     &trans  &trans    &trans  &trans     &trans
                                                              &trans     &trans  &trans    &trans  &trans     &trans
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans             &trans  &trans  &trans                       &trans             &trans       &trans    &trans         &trans                &trans
&trans  &trans  &trans             &trans  &trans  &trans                       &trans             &trans       &trans    &trans         &trans                &trans
&trans  &trans  &trans             &trans  &trans  &trans                       &kp C_VOLUME_UP    &kp HOME     &kp UP    &kp END        &kp C_BRIGHTNESS_INC  &trans
&trans  &trans  &trans             &trans  &trans  &trans                       &kp C_VOLUME_DOWN  &kp LEFT     &kp DOWN  &kp RIGHT      &kp C_BRIGHTNESS_DEC  &trans
&trans  &trans  &trans             &trans  &trans  &trans                       &kp C_MUTE         &kp PAGE_UP  &trans    &kp PAGE_DOWN  &trans                &trans
&trans  &trans  &disable_numpad 2  &trans  &trans                                                  &trans       &trans    &trans         &trans                &trans
                                           &trans  &trans  &disable_numpad 2    &trans             &trans       &trans
                                           &trans  &trans  &trans               &trans             &trans       &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 5
&to 0        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 5
                                                       &trans        &trans        &trans    &trans  &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &triple_click            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &doubleclick             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                                      &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans         &trans    &trans  &trans  &trans
                                      &trans     &trans         &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };

        gaming_mouse_keys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &kp A   &kp S   &kp D   &kp F   &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                               &trans     &trans     &trans  &trans  &trans
                                &trans  &trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK
                                &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener { input-processors = <&zip_temp_layer 4 500>; };

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_scaler 1 16>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
